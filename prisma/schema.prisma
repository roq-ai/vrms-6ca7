generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model client {
  id            String          @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  description   String?         @db.VarChar(255)
  image         String?         @db.VarChar(255)
  name          String          @db.VarChar(255)
  created_at    DateTime        @default(now()) @db.Timestamp(6)
  updated_at    DateTime        @default(now()) @db.Timestamp(6)
  user_id       String          @db.Uuid
  tenant_id     String          @db.VarChar(255)
  user          user            @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  vulnerability vulnerability[]
}

model pentester {
  id            String          @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  user_id       String?         @db.Uuid
  created_at    DateTime        @default(now()) @db.Timestamp(6)
  updated_at    DateTime        @default(now()) @db.Timestamp(6)
  user          user?           @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  vulnerability vulnerability[]
}

model user {
  id          String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email       String      @unique @db.VarChar(255)
  firstName   String?     @db.VarChar(255)
  lastName    String?     @db.VarChar(255)
  roq_user_id String      @db.VarChar(255)
  tenant_id   String      @db.VarChar(255)
  created_at  DateTime    @default(now()) @db.Timestamp(6)
  updated_at  DateTime    @default(now()) @db.Timestamp(6)
  client      client[]
  pentester   pentester[]
}

model vulnerability {
  id           String     @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  description  String     @db.VarChar(255)
  status       String     @db.VarChar(255)
  client_id    String?    @db.Uuid
  pentester_id String?    @db.Uuid
  created_at   DateTime   @default(now()) @db.Timestamp(6)
  updated_at   DateTime   @default(now()) @db.Timestamp(6)
  client       client?    @relation(fields: [client_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  pentester    pentester? @relation(fields: [pentester_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}
