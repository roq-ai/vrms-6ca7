import axios from 'axios';
import queryString from 'query-string';
import { PentesterInterface, PentesterGetQueryInterface } from 'interfaces/pentester';
import { GetQueryInterface } from '../../interfaces';

export const getPentesters = async (query?: PentesterGetQueryInterface) => {
  const response = await axios.get(`/api/pentesters${query ? `?${queryString.stringify(query)}` : ''}`);
  return response.data;
};

export const createPentester = async (pentester: PentesterInterface) => {
  const response = await axios.post('/api/pentesters', pentester);
  return response.data;
};

export const updatePentesterById = async (id: string, pentester: PentesterInterface) => {
  const response = await axios.put(`/api/pentesters/${id}`, pentester);
  return response.data;
};

export const getPentesterById = async (id: string, query?: GetQueryInterface) => {
  const response = await axios.get(`/api/pentesters/${id}${query ? `?${queryString.stringify(query)}` : ''}`);
  return response.data;
};

export const deletePentesterById = async (id: string) => {
  const response = await axios.delete(`/api/pentesters/${id}`);
  return response.data;
};
